import numpy as np
import pandas as pd


def exploit_data(csv_data, csv_pivot, sep, point_function):
    """Use scraped data to produce the pivot table.

    Parameters
    ----------
    csv_data: str
        The csv file where the data is saved.
    csv_pivot: str
        The csv file where the pivot table will be saved.
    sep: str
        Separator for the csv files.
    point_function: callable
        A function. Input: a rank in the monthly top 100. Output: a number of points.
    """
    # Read and prepare the raw data
    df = pd.read_csv(csv_data, sep=sep)
    df['t'] = df['year'] * 12 + df['month'] - 1
    t_max = max(df['t'])
    df['months ago'] = t_max - df['t']
    df['points'] = df.position.apply(point_function)
    df['months in top 10'] = (df['position'] <= 10)
    df['months in top 100'] = (df['position'] <= 100)
    df['pos_min'] = df['position']
    df['current_position'] = (df['t'] == t_max) * df['position']
    pos_max = max(df['position'])

    # Create and sort the pivot table
    pivot = pd.pivot_table(df, index=['title', 'url', 'release_date'],
                           aggfunc={'points': np.sum, 'months in top 100': np.sum, 'months in top 10': np.sum,
                                    'position': np.mean, 'pos_min': np.min, 'months ago': np.min,
                                    'current_position': np.sum})
    pivot.sort_values(by='points', ascending=False, inplace=True)

    # Reindex and put rank
    pivot.reset_index(inplace=True)
    pivot.insert(loc=0, column='rank', value=pivot.index + 1)

    # Correct some pieces of data
    pivot['release_date'] = pd.to_numeric(pivot['release_date'], downcast='integer')
    pivot.loc[pivot['release_date'] == 9999, 'release_date'] = ''
    pivot['months in top 100'] = pd.to_numeric(pivot['months in top 100'], downcast='integer')
    pivot['pos_min'] = pd.to_numeric(pivot['pos_min'], downcast='integer')
    pivot['months in top 10'] = pd.to_numeric(pivot['months in top 10'], downcast='integer')
    pivot.loc[pivot['current_position'] == 0, 'current_position'] = 'not applicable'
    pivot.loc[pivot['months ago'] == 0, 'months ago'] = 'not applicable'

    # Choose order and titles of columns
    pivot = pivot.reindex(columns=['title', 'url', 'release_date',
                                   'points', 'months in top 100', 'position',
                                   'pos_min', 'months in top 10',
                                   'current_position', 'months ago'])
    pivot.rename({
        'position': 'average position in top %s' % pos_max,
        'pos_min': 'peak position',
        'current_position': 'current position in top %s' % pos_max,
        'months ago': 'months since leaving top %s' % pos_max
    }, inplace=True, axis='columns')

    # Export
    pivot.to_csv(csv_pivot, sep=sep, index=False)


if __name__ == '__main__':
    def f(rank):
        return rank ** (-.5)
    exploit_data(csv_data='data.csv', csv_pivot='pivot.csv', sep=';', point_function=f)
